---
import FullScreenable from "../../components/FullScreenable.svelte";
import MasonryImageGrid from "../../components/MasonryImageGrid.svelte";
import { Image } from "astro:assets";
import { projectData } from "../../lib/getProjects";

export function getStaticPaths() {
  return projectData.map((project) => ({
    params: { slug: project.slug },
  }));
}

import { getProjectBySlug, type ProjectData } from "../../lib/getProjects";
import Layout from "../../layouts/Layout.astro";

const { slug } = Astro.params;
const project: ProjectData = getProjectBySlug(slug)!;
console.debug("Project is", project);

if (!project) {
  console.error("Project not found!", slug);
}

// const allImages = import.meta.glob<{default: ImageMetadata}>(`/src/projects/**/**.*{jpg,jpeg,png,gif,webp}`);
// const projectImages = Object.entries(allImages).filter(([key, value]) => key.includes(slug));
---

<Layout>
  <div class="prose">
    <p><a href="/portfolio">‚Üê Back to home</a></p>
    <h1>{project.title}</h1>
    <!-- Use Astro's dangerouslySetInnerHTML for the pre-parsed HTML from Markdown -->
    <div set:html={project.descriptionHtml} />
  </div>
  <div class="w-full h-full">

  <MasonryImageGrid client:load>
    {
      project.images.map(async (img) => (
      <div class="w-[250px]" data-masonry-item>
        <FullScreenable client:load src={await img()}>
          <div slot="image">
          <Image
            src={img()}
            alt="Additional project image"
            width={300}
            height={300}
            />
          </div>
          <div slot="full-screen">
            <Image
              src={img()}
              alt="Additional project image"
            />
          </div>
        </FullScreenable>
        </div>
      ))
    }
    </MasonryImageGrid>
</div>
</Layout>
